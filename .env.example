#==================================================#
#                  Archon                          #
#==================================================#

# Minimal startup configuration - only Supabase connection required
# All other settings (API keys, model choices, RAG flags) are managed via the Settings page

# Get your SUPABASE_URL from the API section of your Supabase project settings -
# https://supabase.com/dashboard/project/<your project ID>/settings/api
SUPABASE_URL=

# Get your SUPABASE_SERVICE_KEY from the API section of your Supabase project settings -
# https://supabase.com/dashboard/project/<your project ID>/settings/api
# On this page it is called the service_role secret.
SUPABASE_SERVICE_KEY=

# Optional: Set log level for debugging
LOGFIRE_TOKEN=
LOG_LEVEL=INFO

# Service Ports Configuration
# These ports are used for external access to the services
HOST=localhost
ARCHON_SERVER_PORT=8181
ARCHON_MCP_PORT=8051
ARCHON_AGENTS_PORT=8052
ARCHON_UI_PORT=3737
ARCHON_DOCS_PORT=3838

# =================================================================
# MCP (Model Context Protocol) Configuration
# =================================================================

# Backend MCP Client Configuration (Optional)
# Used by Python agents to connect to the MCP server
# ARCHON_MCP_HOST=archon-mcp                                   # MCP server hostname (default: archon-mcp in Docker, localhost otherwise)
# ARCHON_MCP_PROTOCOL=http                                     # Protocol: http or https (default: http)
# ARCHON_MCP_PATH=/mcp                                         # URL path prefix (default: empty, use /mcp for reverse proxy)

# Frontend MCP Configuration (Optional)
# Used by the web UI to connect to MCP services
# VITE_MCP_URL=/mcp                                            # Relative URL for reverse proxy (recommended for production)
# VITE_MCP_URL=http://localhost:8051/mcp                       # Direct URL for local development

# =================================================================
# Deployment Configuration
# =================================================================

# Frontend API Configuration (Optional)
# Override for custom deployment scenarios (DO NOT include /api suffix)
# VITE_API_URL=https://your-domain.com                        # Custom API base URL (frontend automatically adds /api)

# Traefik Reverse Proxy Configuration (Optional)
# DOMAIN_NAME=your-domain.com                                  # Your domain name
# DOCKER_SOCKET_LOCATION=/var/run/docker.sock                  # Docker socket path

# Optional: Set LLM Base URL for OpenAI
# LLM_BASE_URL=https://api.openai.com/v1

# NOTE: All other configuration has been moved to database management!
# Run the credentials_setup.sql file in your Supabase SQL editor to set up the credentials table.
# Then use the Settings page in the web UI to manage:
# - OPENAI_API_KEY (encrypted)
# - MODEL_CHOICE 
# - TRANSPORT settings
# - RAG strategy flags (USE_CONTEXTUAL_EMBEDDINGS, USE_HYBRID_SEARCH, etc.)