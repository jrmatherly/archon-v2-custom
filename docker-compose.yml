services:
  #==================================================#
  #                Archon Server                     #
  #  Server Service (FastAPI + Socket.IO + Crawling) #
  #==================================================#
  # Server Service (FastAPI + Socket.IO + Crawling)
  archon-server:
    build:
      context: ./python
      dockerfile: Dockerfile.server
      args:
        BUILDKIT_INLINE_CACHE: 1
        ARCHON_SERVER_PORT: ${ARCHON_SERVER_PORT:-8181}
    container_name: archon-server
    command:
      [
        "python",
        "-m",
        "uvicorn",
        "src.server.main:socket_app",
        "--host",
        "0.0.0.0",
        "--port",
        "${ARCHON_SERVER_PORT:-8181}",
        "--reload",
      ]
    networks:
      - aanai
      - proxy
    ports:
      - "${ARCHON_SERVER_PORT:-8181}:${ARCHON_SERVER_PORT:-8181}"
    volumes:
      - ${DOCKER_SOCKET_LOCATION:-/var/run/docker.sock}:/var/run/docker.sock # Docker socket for MCP container control
      - ./python/src:/app/src # Mount source code for hot reload
      - ./python/tests:/app/tests # Mount tests for UI test execution
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - PROJECTS_ENABLED=true
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - ARCHON_MCP_PORT=${ARCHON_MCP_PORT:-8051}
      - MCP_SERVICE_URL=http://archon-mcp:${ARCHON_MCP_PORT:-8051}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.archon-api-rtr.entrypoints=websecure"
      - "traefik.http.routers.archon-api-rtr.rule=Host(`aanai-archon.${DOMAIN_NAME}`) && PathPrefix(`/api`)"
      # Middlewares
      - "traefik.http.routers.archon-api-rtr.middlewares=chain-no-auth@file"
      # HTTP Services
      - "traefik.http.routers.archon-api-rtr.service=archon-server-svc"
      - "traefik.http.services.archon-server-svc.loadbalancer.server.port=${ARCHON_SERVER_PORT:-8181}"

    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          'python -c "import urllib.request; urllib.request.urlopen(''http://localhost:${ARCHON_SERVER_PORT:-8181}/health'')"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  #==================================================#
  #                Archon MCP                        #
  #    Lightweight MCP Server Service (HTTP-based)   #
  #==================================================#
  # Lightweight MCP Server Service (HTTP-based)
  archon-mcp:
    build:
      context: ./python
      dockerfile: Dockerfile.mcp
      args:
        BUILDKIT_INLINE_CACHE: 1
        ARCHON_MCP_PORT: ${ARCHON_MCP_PORT:-8051}
    container_name: archon-mcp
    networks:
      - aanai
      - proxy
    ports:
      - "${ARCHON_MCP_PORT:-8051}:${ARCHON_MCP_PORT:-8051}"
    #  - "8055:8055"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - TRANSPORT=sse
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # MCP needs to know where to find other services
      - API_SERVICE_URL=http://archon-server:${ARCHON_SERVER_PORT:-8181}
      - AGENTS_SERVICE_URL=http://archon-agents:${ARCHON_AGENTS_PORT:-8052}
      - ARCHON_MCP_PORT=${ARCHON_MCP_PORT:-8051}
    labels:
      - "traefik.enable=true"
      # HTTP Routers (using custom MCP entrypoint)
      - "traefik.http.routers.archon-mcp-rtr.entrypoints=mcpsecure"
      - "traefik.http.routers.archon-mcp-rtr.rule=Host(`aanai-archon.${DOMAIN_NAME}`) && PathPrefix(`/mcp-api`)"
      # Middlewares
      - "traefik.http.middlewares.mcp-stripprefix.stripprefix.prefixes=/mcp-api"
      - "traefik.http.routers.archon-mcp-rtr.middlewares=chain-no-auth@file,mcp-stripprefix"
      # HTTP Services
      - "traefik.http.routers.archon-mcp-rtr.service=archon-mcp-svc"
      - "traefik.http.services.archon-mcp-svc.loadbalancer.server.port=8051"

    depends_on:
      - archon-server
      - archon-agents

    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          'python -c "import socket; s=socket.socket(); s.connect((''localhost'', ${ARCHON_MCP_PORT:-8051})); s.close()"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s # Give dependencies time to start

  #==================================================#
  #                Archon Agents                     #
  #       AI Agents Service (ML/Reranking)           #
  #==================================================#
  # AI Agents Service (ML/Reranking)
  archon-agents:
    build:
      context: ./python
      dockerfile: Dockerfile.agents
      args:
        BUILDKIT_INLINE_CACHE: 1
        ARCHON_AGENTS_PORT: ${ARCHON_AGENTS_PORT:-8052}
    container_name: archon-agents
    networks:
      - aanai
    ports:
      - "${ARCHON_AGENTS_PORT:-8052}:${ARCHON_AGENTS_PORT:-8052}"
    #  - "8056:8056" # Direct External Access through Traefik
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=${ARCHON_LOG_LEVEL:-INFO}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}

    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          'python -c "import urllib.request; urllib.request.urlopen(''http://localhost:${ARCHON_AGENTS_PORT:-8052}/health'')"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  #==================================================#
  #                Archon UI                         #
  #              Web Interface                       #
  #==================================================#
  # Frontend
  frontend:
    build: ./archon-ui-main
    container_name: archon-ui
    ports:
      - "${ARCHON_UI_PORT:-3737}:5173"
    environment:
      - VITE_API_URL=http://${HOST:-localhost}:${ARCHON_SERVER_PORT:-8181}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - HOST=${HOST:-localhost}
    networks:
      - aanai
      - proxy
    volumes:
      - ./archon-ui-main/src:/app/src
      - ./archon-ui-main/public:/app/public
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.archon-rtr.entrypoints=websecure"
      - "traefik.http.routers.archon-rtr.rule=Host(`aanai-archon.${DOMAIN_NAME}`) && !PathPrefix(`/api`)"
      # Middlewares
      - "traefik.http.routers.archon-rtr.middlewares=chain-no-auth@file"
      # HTTP Services
      - "traefik.http.routers.archon-rtr.service=archon-svc"
      - "traefik.http.services.archon-svc.loadbalancer.server.port=5173"

    depends_on:
      - archon-server

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

  #==================================================#
  #                Archon Documentation              #
  #==================================================#
  # Documentation
  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile
    container_name: archon-docs
    networks:
      - aanai
      - proxy
    ports:
      - "${ARCHON_DOCS_PORT:-3838}:80"
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.archon-docs-rtr.entrypoints=websecure"
      - "traefik.http.routers.archon-docs-rtr.rule=Host(`aanai-archondocs.${DOMAIN_NAME}`)"
      # Middlewares
      - "traefik.http.routers.archon-docs-rtr.middlewares=chain-no-auth@file"
      # HTTP Services
      - "traefik.http.routers.archon-docs-rtr.service=archon-docs-svc"
      - "traefik.http.services.archon-docs-svc.loadbalancer.server.port=80"
